version: '3'

services:

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile
    working_dir: /var/www
    volumes:
      - ./backend/:/var/www/api
      - ./client/:/var/www/client
      - .docker/data/nginx/logs:/var/log/nginx
      - .docker/data/nginx/conf.d:/etc/nginx/conf.d
    restart: always
    links:
      - php
      - nuxt
    ports:
      # Nuxt port
      - ${NUXT_IPPORT_HOST}:${NUXT_PORT_CONTAINER}
      # Laravel port
      - ${LARAVEL_IPPORT_HOST}:${LARAVEL_PORT_CONTAINER}
      # Laravel port
      - ${ECHO_IPPORT_HOST}:${ECHO_PORT_CONTAINER}
    depends_on:
      - mysql
      - php
      - nuxt

  php:
    container_name: php
    build:
      context: .
      dockerfile: .docker/php_fpm/Dockerfile
    working_dir: /var/www/api/
    volumes:
      - ./backend:/var/www/api/
    environment:
      # To cancel xDebug, set remote_enable=0
      XDEBUG_CONFIG: "remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    ports:
      - 9001:9000
    links:
      - mysql
    depends_on:
      - mysql
    restart: always

  supervisor:
    container_name: supervisor
    build:
      context: .
      dockerfile: .docker/supervisor/Dockerfile
    ports:
      - 6001:6001
    volumes:
      - ./backend/:/var/www/api/
      - ./.docker/supervisor/conf.d:/etc/supervisor/conf.d
      - ./.docker/data/supervisor/logs:/var/log
    links:
      - mysql
    restart: always

  mysql:
    container_name: mysql
    build:
      context: .
      dockerfile: .docker/db-mysql/Dockerfile
    volumes:
      - database:/var/lib/mysql
      - ./.docker/mysql/mysqlconf:/etc/mysql/conf.d
    ports:
        - 33061:3306
    environment:
      - "MYSQL_DATABASE=db-chat"
      - "MYSQL_USER=root"
      - "MYSQL_PASSWORD=pass"
      - "MYSQL_ROOT_PASSWORD=pass"
    restart: always

  nuxt:
    container_name: nuxt
    build:
      context: .
      dockerfile: .docker/nuxt/Dockerfile
    working_dir: /var/www/client
    ports:
      - 3000:3000
    volumes:
      - ./client:/var/www/client
    environment:
      - "APP_ROOT=/var/www/client"
      - "NODE_ENV=development"
    command: "npm run dev"
    restart: always

#  redis:
#    container_name: redis
#    build:
#      context: .
#      dockerfile: .docker/redis/Dockerfile
#    volumes:
#      - redis:/data
#      - ./.docker/redis/redis.conf:/data/redis.conf
#    ports:
#      - 6379:6379
#
#  echo_server:
#    container_name: echo_server
#    build:
#      context: ./.docker/echo-server/
#      dockerfile: Dockerfile
#    ports:
#      - 6001:6001
#    depends_on:
#      - redis
#    environment:
#      - "TZ=${TZ}"
#      - "APP_URL=http://nginx"
#      - "APP_DEBUG=true"
#      - "LES_DB=redis"
#      - "LES_PORT=6001"
#      - "LES_HOST=0.0.0.0"
#      - "REDIS_PORT=6379"
#      - "REDIS_HOST=redis"

######### Volumes ###################################

volumes:
  database:
    driver: local
  redis:
    driver: local
